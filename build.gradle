plugins {
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.freestrokes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
	mavenCentral()
}

sourceSets {
	main {
		resources {
			srcDir 'src/main/resources'
		}
		java {
			srcDirs 'src/main/java'
		}
	}
}

bootJar {
	enabled = true
    mainClass = 'com.freestrokes.SpringBootExamplesApplication'
    archiveFileName = 'freestrokes-api.jar'
    destinationDirectory = file('./target')
	manifest {
		attributes 'Implementation-Title': 'Spring Boot Examples API'
		attributes 'Implementation-Version': '1.0.0'
		attributes 'Implementation-Timstamp': new Date()
	}
}

test {
	useJUnitPlatform()
}

wrapper {
	gradleVersion = '7.6.1'
}

// 프로퍼티 중복 방지를 위한 설정
tasks {
	processResources {
		duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
	}
}

compileJava {
	options.encoding = 'UTF-8'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
//    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
//	implementation 'mysql:mysql-connector-java'
	implementation 'junit:junit:4.13.2'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
	implementation 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
//	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

// Dockerize
// tasks.named('bootBuildImage') {
// 	builder = 'paketobuildpacks/builder-jammy-base:latest'
// }
